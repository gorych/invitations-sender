/*
 * This file is generated by jOOQ.
 */
package by.gsu.domain;


import by.gsu.domain.tables.Event;
import by.gsu.domain.tables.Person;
import by.gsu.domain.tables.PersonEvent;
import by.gsu.domain.tables.Template;
import by.gsu.domain.tables.records.EventRecord;
import by.gsu.domain.tables.records.PersonEventRecord;
import by.gsu.domain.tables.records.PersonRecord;
import by.gsu.domain.tables.records.TemplateRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<EventRecord, Integer> IDENTITY_EVENT = Identities0.IDENTITY_EVENT;
    public static final Identity<PersonRecord, Integer> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<PersonEventRecord, Integer> IDENTITY_PERSON_EVENT = Identities0.IDENTITY_PERSON_EVENT;
    public static final Identity<TemplateRecord, Integer> IDENTITY_TEMPLATE = Identities0.IDENTITY_TEMPLATE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EventRecord> PK_EVENT = UniqueKeys0.PK_EVENT;
    public static final UniqueKey<PersonRecord> PK_PERSON = UniqueKeys0.PK_PERSON;
    public static final UniqueKey<PersonEventRecord> PK_PERSON_EVENT = UniqueKeys0.PK_PERSON_EVENT;
    public static final UniqueKey<TemplateRecord> PK_TEMPLATE = UniqueKeys0.PK_TEMPLATE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PersonEventRecord, PersonRecord> FK_PERSON_EVENT_PERSON_1 = ForeignKeys0.FK_PERSON_EVENT_PERSON_1;
    public static final ForeignKey<PersonEventRecord, EventRecord> FK_PERSON_EVENT_EVENT_1 = ForeignKeys0.FK_PERSON_EVENT_EVENT_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<EventRecord, Integer> IDENTITY_EVENT = Internal.createIdentity(Event.EVENT, Event.EVENT.ID);
        public static Identity<PersonRecord, Integer> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.ID);
        public static Identity<PersonEventRecord, Integer> IDENTITY_PERSON_EVENT = Internal.createIdentity(PersonEvent.PERSON_EVENT, PersonEvent.PERSON_EVENT.ID);
        public static Identity<TemplateRecord, Integer> IDENTITY_TEMPLATE = Internal.createIdentity(Template.TEMPLATE, Template.TEMPLATE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<EventRecord> PK_EVENT = Internal.createUniqueKey(Event.EVENT, "pk_event", Event.EVENT.ID);
        public static final UniqueKey<PersonRecord> PK_PERSON = Internal.createUniqueKey(Person.PERSON, "pk_person", Person.PERSON.ID);
        public static final UniqueKey<PersonEventRecord> PK_PERSON_EVENT = Internal.createUniqueKey(PersonEvent.PERSON_EVENT, "pk_person_event", PersonEvent.PERSON_EVENT.ID);
        public static final UniqueKey<TemplateRecord> PK_TEMPLATE = Internal.createUniqueKey(Template.TEMPLATE, "pk_template", Template.TEMPLATE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PersonEventRecord, PersonRecord> FK_PERSON_EVENT_PERSON_1 = Internal.createForeignKey(by.gsu.domain.Keys.PK_PERSON, PersonEvent.PERSON_EVENT, "fk_person_event_person_1", PersonEvent.PERSON_EVENT.PERSONID);
        public static final ForeignKey<PersonEventRecord, EventRecord> FK_PERSON_EVENT_EVENT_1 = Internal.createForeignKey(by.gsu.domain.Keys.PK_EVENT, PersonEvent.PERSON_EVENT, "fk_person_event_event_1", PersonEvent.PERSON_EVENT.EVENTID);
    }
}
