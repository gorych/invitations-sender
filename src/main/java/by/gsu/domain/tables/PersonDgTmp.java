/*
 * This file is generated by jOOQ.
 */
package by.gsu.domain.tables;


import by.gsu.domain.DefaultSchema;
import by.gsu.domain.Keys;
import by.gsu.domain.tables.records.PersonDgTmpRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonDgTmp extends TableImpl<PersonDgTmpRecord> {

    private static final long serialVersionUID = -347356352;

    /**
     * The reference instance of <code>person_dg_tmp</code>
     */
    public static final PersonDgTmp PERSON_DG_TMP = new PersonDgTmp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonDgTmpRecord> getRecordType() {
        return PersonDgTmpRecord.class;
    }

    /**
     * The column <code>person_dg_tmp.id</code>.
     */
    public final TableField<PersonDgTmpRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>person_dg_tmp.firstName</code>.
     */
    public final TableField<PersonDgTmpRecord, String> FIRSTNAME = createField("firstName", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>person_dg_tmp.lastName</code>.
     */
    public final TableField<PersonDgTmpRecord, String> LASTNAME = createField("lastName", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>person_dg_tmp.email</code>.
     */
    public final TableField<PersonDgTmpRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>person_dg_tmp.middleName</code>.
     */
    public final TableField<PersonDgTmpRecord, String> MIDDLENAME = createField("middleName", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>person_dg_tmp</code> table reference
     */
    public PersonDgTmp() {
        this(DSL.name("person_dg_tmp"), null);
    }

    /**
     * Create an aliased <code>person_dg_tmp</code> table reference
     */
    public PersonDgTmp(String alias) {
        this(DSL.name(alias), PERSON_DG_TMP);
    }

    /**
     * Create an aliased <code>person_dg_tmp</code> table reference
     */
    public PersonDgTmp(Name alias) {
        this(alias, PERSON_DG_TMP);
    }

    private PersonDgTmp(Name alias, Table<PersonDgTmpRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonDgTmp(Name alias, Table<PersonDgTmpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PersonDgTmp(Table<O> child, ForeignKey<O, PersonDgTmpRecord> key) {
        super(child, key, PERSON_DG_TMP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PersonDgTmpRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PERSON_DG_TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonDgTmpRecord> getPrimaryKey() {
        return Keys.PK_PERSON_DG_TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonDgTmpRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonDgTmpRecord>>asList(Keys.PK_PERSON_DG_TMP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonDgTmp as(String alias) {
        return new PersonDgTmp(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonDgTmp as(Name alias) {
        return new PersonDgTmp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonDgTmp rename(String name) {
        return new PersonDgTmp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonDgTmp rename(Name name) {
        return new PersonDgTmp(name, null);
    }
}
