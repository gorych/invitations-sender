package by.gsu.forms;

import by.gsu.dao.impl.EventDaoImpl;
import by.gsu.model.Event;
import by.gsu.service.EventService;
import by.gsu.service.impl.EventServiceImpl;
import org.jooq.tools.StringUtils;

import javax.swing.*;
import java.awt.*;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import java.util.stream.Stream;

import static by.gsu.util.DateTimeUtil.DD_MM_YYYY_FORMATTER;
import static javax.swing.JOptionPane.*;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

public class AddNewEvent extends AbstractForm {

    private static final Pattern DATE_PATTERN = Pattern.compile("\\d{2}.\\d{2}.\\d{4}");
    private static final int TEXT_FIELD_WIDTH = 15;

    private static final String TITLE = "Добавление нового мероприятия";
    private static final int PREF_WIDTH = 370;
    private static final int PREF_HEIGHT = 300;

    private JPanel mainPanel;

    private JTextField textFieldName;
    private JTextField textFieldDescription;
    private JTextField textFieldDate;

    private JButton buttonAdd;

    private EventService eventService;

    private MainForm mainForm;

    public AddNewEvent(MainForm mainForm) {
        this.mainForm = mainForm;
        this.eventService = new EventServiceImpl(new EventDaoImpl());
        this.textFieldDate.setText(LocalDate.now().format(DD_MM_YYYY_FORMATTER));

        Supplier<Stream<JTextField>> textFieldsStream = () -> Arrays.stream(mainPanel.getComponents())
                .filter(component -> component instanceof JTextField)
                .map(JTextField.class::cast);

        textFieldsStream.get().forEach(textField -> textField.setColumns(TEXT_FIELD_WIDTH));

        buttonAdd.addActionListener(e -> {
            long notFilledFieldsCount = textFieldsStream.get()
                    .filter(textField -> StringUtils.isEmpty(textField.getText()))
                    .count();

            if (notFilledFieldsCount > 0) {
                JOptionPane.showMessageDialog(mainPanel, "Заполните все поля!", "Ошибка", ERROR_MESSAGE);
                return;
            }

            if (!isDateCorrect()) {
                JOptionPane.showMessageDialog(mainPanel, "Дата введена некорректно! Введите дату в формате 31.12.2019", "Ошибка", ERROR_MESSAGE);
                return;
            }

            eventService.add(new Event.Builder()
                    .setName(textFieldName.getText())
                    .setDescription(textFieldDescription.getText())
                    .setDate(textFieldDate.getText())
                    .build());

            JOptionPane.showMessageDialog(mainPanel, "Запись успешно добавлена", "Информация", INFORMATION_MESSAGE);
            mainForm.initEventTable();
        });
    }

    private boolean isDateCorrect() {
        boolean isValidDate = DATE_PATTERN.matcher(textFieldDate.getText()).matches();
        if (!isValidDate) {
            return false;
        }

        try {
            LocalDate.parse(textFieldDate.getText(), DD_MM_YYYY_FORMATTER);
        } catch (Exception ex) {
            return false;
        }

        return true;
    }

    @Override
    public JPanel getMainPanel() {
        return mainPanel;
    }

    @Override
    public String getTitle() {
        return TITLE;
    }

    @Override
    public int getWidth() {
        return PREF_WIDTH;
    }

    @Override
    public int getHeight() {
        return PREF_HEIGHT;
    }

    @Override
    public int getDefaultCloseOperation() {
        return DO_NOTHING_ON_CLOSE;
    }

    @Override
    public void onCloseAction() {
        mainForm.initEventTable();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(spacer1, gbc);
        textFieldName = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(textFieldName, gbc);
        textFieldDescription = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 0, 0);
        mainPanel.add(textFieldDescription, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Название");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(0, 0, 0, 10);
        mainPanel.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Описание");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(0, 0, 0, 10);
        mainPanel.add(label2, gbc);
        buttonAdd = new JButton();
        buttonAdd.setText("Добавить");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 0, 0);
        mainPanel.add(buttonAdd, gbc);
        textFieldDate = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 0, 0);
        mainPanel.add(textFieldDate, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Дата проведения");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(0, 0, 0, 10);
        mainPanel.add(label3, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
